---
title: Localstorage
layout: layouts/example.njk
level: 2
---
<link rel="stylesheet" href="{{ site.path + '/css/examples/button-example.css' }}">
<script defer src="{{ site.path + '/js/examples/localstorage-example.js' }}"></script>

<p>För det här exemplet så utgår vi från en html struktur med ett par knappar. 
    Knapparna går att klicka på för att öka en räknare, men värdet sparas inte
    mellan sidladdningar.
    För att spara värdet mellan sidladdningar kan vi använda localStorage. 
</p>
<p>LocalStorage är ett inbygg api i webbläsaren som gör det möjligt att spara 
    data. Datan är sparad lokalt i webbläsaren. </p>

<h2>Exempel</h2>

<div class="playground">
    <h2>Click count: 0</h2>
    <div class="button-container">
        <button class="btn" id="count-button">Click</button>
        <button class="btn" id="save-button">Save clicks</button>
        <button class="btn" id="reset-button">Reset clicks</button>
    </div>
</div>

<p>Html kod för knapparna och display elementet.</p>
{% highlight "html" %}
<h2>Click count: 0</h2>
<div class="button-container">
    <button class="btn" id="count-button">Click</button>
    <button class="btn" id="save-button">Save clicks</button>
    <button class="btn" id="reset-button">Reset clicks</button>
</div>
{% endhighlight %}

<p>Javascript för exemplet. Exemplet kan öka räknaren och nollställa den, men 
    knappen för att spara värdet gör inget.
</p>
{% highlight "js" %}
window.addEventListener('load', (event) => {
    const countButton = document.querySelector('#count-button');
    const saveButton = document.querySelector('#save-button');
    const resetButton = document.querySelector('#reset-button');

    let count = 0;

    const showCount = (countValue) => {
        const counterElement = document.querySelector('.playground > h2');
        counterElement.textContent = `Click count: ${countValue}`;
    };

    showCount(count);

    countButton.addEventListener('click', (event) => {
        event.preventDefault();
        count++;
        showCount(count);
    });
    saveButton.addEventListener('click', (event) => {
        event.preventDefault();
    });
    resetButton.addEventListener('click', (event) => {
        event.preventDefault();
        count = 0;
        showCount(count);
    });
});
{% endhighlight %}

<h2>Localstorage</h2>
<h3>Spara, setItem</h3>
<p>För att spara till localStorage så används setItem().</p>
{% highlight "js" %}
localStorage.setItem(PARAMETER, VÄRDE);
{% endhighlight %}
<p>Uppdatera spara knappen med följande kod för att den ska spara till localStorage.</p>
{% highlight "js" %}
saveButton.addEventListener('click', (event) => {
    event.preventDefault();
    localStorage.setItem('count', count);
});
{% endhighlight %}

<p>Nu är värdet sparat i localStorage, undersök att det fungerar genom att 
    inspektera localStorage i webbläsaren. Kontrollera att värdet är sparat 
    även när du laddar om sidan.
</p>
<img src="{{ site.path + '/images/ls-dump.png' }}" alt="Localstorage illustration">

<h3>Hämta, getItem</h3>
<p>Ladda något från localStorage med getItem(). Kom ihåg att spara det du laddar
    i en variabel.
</p>
{% highlight "js" %}
localStorage.getItem(PARAMETER);
{% endhighlight %}
<p>Uppdatera koden för att ladda count från localStorage.</p>
{% highlight "js" %}
let count = localStorage.getItem('count') || 0;
{% endhighlight %}

<h3>Rensa, removeItem</h3>

<p>Det sista är att rensa localStorage. Det går att rensa hela storage, men att
    föredra är att ta bort enskilda värden. För att göra detta så används removeItem().
</p>
{% highlight "js" %}
localStorage.removeItem(PARAMETER);
{% endhighlight %}

<p>Nu kan du uppdatera reset knappen.</p>
{% highlight "js" %}
resetButton.addEventListener('click', (event) => {
    event.preventDefault();
    localStorage.removeItem('count');
    count = 0;
    showCount(count);
});
{% endhighlight %}

<h2>Slutgiltig kod</h2>

<p>Den kompletta Javascript koden.</p>
{% highlight "js" %}
window.addEventListener('load', (event) => {
    const countButton = document.querySelector('#count-button');
    const saveButton = document.querySelector('#save-button');
    const resetButton = document.querySelector('#reset-button');

    let count = localStorage.getItem('count') || 0;

    const showCount = (countValue) => {
        const counterElement = document.querySelector('.playground > h2');
        counterElement.textContent = `Click count: ${countValue}`;
    };

    showCount(count);

    countButton.addEventListener('click', (event) => {
        event.preventDefault();
        count++;
        showCount(count);
    });
    saveButton.addEventListener('click', (event) => {
        event.preventDefault();
        localStorage.setItem('count', count);
    });
    resetButton.addEventListener('click', (event) => {
        event.preventDefault();
        localStorage.removeItem('count');
        count = 0;
        showCount(count);
    });
});
{% endhighlight %}

<h2>Mer komplexa objekt</h2>
<p>Om det som ska sparas i localStorage är av mer komplex karaktär, en array eller 
    ett objekt till exempel, så kan det sparas som en json sträng.</p>
<p>Öppna utvecklarverktygen och undersök värdet för exempel. Objektet är sparat som en 
    JSON sträng. Prova att konvertera det till ett JSON objekt i konsollen.
</p>
{% highlight "js" %}
let exempel = localStorage.getItem('exempel');
console.log(exempel); // som sträng
exempel = JSON.parse(exempel);
console.log(exempel); // som objekt
{% endhighlight %}

<p>När objektet är parsat med JSON.parse() så kan vi nu arbeta med det och ändra det.</p>
{% highlight "js" %}
exempel.type = 'björn';
exempel.friends.push('Vargen');
exempel.age = exempel.age + 1; // öka ålder med 1
console.log(exempel);
{% endhighlight %}

<p>För att sedan spara objektet så använder du setItem. Men innan det sparas så 
    måste objektet konverteras till en json sträng med JSON.stringify().
</p>
{% highlight "js" %}
localStorage.setItem('exempel', JSON.stringify(exempel));
{% endhighlight %}

<p>Öppna nu utvecklarverktygen och studera objektet i applikation -> localStorage -> exempel.</p>